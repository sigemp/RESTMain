/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sigemp.gestion.client.gui.sis_general.form;

import com.sigemp.gestion.client.gui.component.base.CRUD;
import com.sigemp.gestion.client.gui.component.base.SgDialog;
import com.sigemp.common.U;
import com.sigemp.gestion.client.gui.component.SgImage;
import com.sigemp.gestion.client.services.GsyProvService;
import com.sigemp.gestion.shared.dto.GsyProvDto;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 *
 * @author cristian
 */
public class FormGsyProv extends SgDialog {

    private boolean confirmed = false;
    private CRUD crud;
    private GsyProvDto reccordGsyProv;

    GsyProvService service = new GsyProvService();

    /**
     * Creates new form NewABMGsyProv
     *
     * @param parent
     * @param modal
     */
    public FormGsyProv(JDialog parent, boolean modal) {
        super(parent, modal);
    }

    public FormGsyProv(JFrame jframe, boolean modal) {
        super(jframe, modal);
    }

    private void chequear(GsyProvDto cus) throws Exception {

        if (cus.getDes().length() == 0) {
            throw new Exception("Ingreso un nombre");
        }

    }

    public GsyProvDto getRecord() {
        return reccordGsyProv;
    }

    private GsyProvDto getFromScreen() {
        Integer id = U.getSwingUtil().getInt(jtId);

        String descripcion = jtDescripcion.getText();

        GsyProvDto cus = new GsyProvDto();
        cus.setProvId(id);

        cus.setDes(descripcion);
        return cus;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtId = new javax.swing.JTextField();
        jtDescripcion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jb_aceptar = new javax.swing.JButton();
        jb_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jtId.setText("jTextField1");

        jtDescripcion.setText("jTextField1");

        jLabel1.setText("ID:");

        jLabel2.setText("Descripcion:");

        jb_aceptar.setText("Aceptar");
        jb_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_aceptarActionPerformed(evt);
            }
        });

        jb_cancelar.setText("Cancelar");
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(174, Short.MAX_VALUE)
                .addComponent(jb_aceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_cancelar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_aceptar)
                    .addComponent(jb_cancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_aceptarActionPerformed
        try {
            GsyProvDto cus = getFromScreen();
            chequear(cus);
            reccordGsyProv = cus;
            setConfirmed(true);
            setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(FormGsyProv.class.getName()).log(Level.SEVERE, null, ex);
            me(ex);
        }
    }//GEN-LAST:event_jb_aceptarActionPerformed

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jb_cancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jb_aceptar;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JTextField jtDescripcion;
    private javax.swing.JTextField jtId;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the confirmed
     */
    public boolean isConfirmed() {
        return confirmed;
    }

    /**
     * @param confirmed the confirmed to set
     */
    public void setConfirmed(boolean confirmed) {
        this.confirmed = confirmed;
    }

    public void setRecord(GsyProvDto customer, CRUD crud) {
        this.reccordGsyProv = customer;
        this.crud = crud;

        jtId.setText(customer.getProvId().toString());
        jtDescripcion.setText(customer.getDes());

        switch (crud) {
            case ALTA:
                jtId.setText("0");
                jtId.setEnabled(false);
                break;
            default:
                jtId.setEnabled(true);
        }
    }

    public void preInit() {
        initComponents();
        jb_aceptar.setIcon(SgImage.ACEPTAR.getImage(SgImage.SIZES.S16));
        jb_cancelar.setIcon(SgImage.CANCELAR.getImage(SgImage.SIZES.S16));

    }

    public void setId(Integer id, CRUD cur) throws Exception {
        if (cur == CRUD.ALTA) {
            GsyProvDto entity = service.restNewEntity();
            setRecord(entity, cur);
        } else {
            GsyProvDto cer = service.restFind(id);
            setRecord(cer, cur);
        }
    }

}
