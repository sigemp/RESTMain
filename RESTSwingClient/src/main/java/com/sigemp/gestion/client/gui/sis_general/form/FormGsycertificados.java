/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sigemp.gestion.client.gui.sis_general.form;

import com.sigemp.common.DateUtils;
import com.sigemp.common.FileUtils;
import com.sigemp.gestion.client.gui.component.base.CRUD;
import com.sigemp.gestion.client.gui.component.base.SgDialog;
import com.sigemp.common.U;
import com.sigemp.gestion.client.gui.component.SgImage;
import com.sigemp.gestion.client.services.GsyCertificadoService;
import com.sigemp.gestion.client.services.ServiceFactory;
import com.sigemp.gestion.shared.dto.GsyCertificadosDto;
import com.sigemp.gestion.shared.dto.GsyCertificadosDto.TIPO_CERTIFICADO;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author cristian
 */
public class FormGsyCertificados extends SgDialog {

    private static String ultimoPath;

    private boolean confirmed = false;
    private CRUD crud;
    private GsyCertificadosDto reccordGsyProv;
    GsyCertificadoService service = ServiceFactory.getGsyCertificadosService();

    private static final Logger LOG = Logger.getLogger(FormGsyCertificados.class.getName());

    /**
     * Creates new form NewABMGsyProv
     *
     * @param parent
     * @param modal
     */
    public FormGsyCertificados(JDialog parent, boolean modal) {
        super(parent, modal);
    }

    public FormGsyCertificados(JFrame jframe, boolean modal) {
        super(jframe, modal);
    }

    private void chequear(GsyCertificadosDto cus) throws Exception {

        if (cus.getDes().length() == 0) {
            throw new Exception("Ingreso un nombre");
        }

    }

    public void setId(Integer id, CRUD crud) throws Exception {

        if (crud == CRUD.ALTA) {
            GsyCertificadosDto entity = service.restNewEntity();
            setRecord(entity, crud);
        } else {
            GsyCertificadosDto cer = service.restFind(id);
            setRecord(cer, crud);
        }

    }

    public GsyCertificadosDto getRecord() {
        return reccordGsyProv;
    }

    private GsyCertificadosDto getFromScreen() {
        Integer id = U.getSwingUtil().getInt(jtId);

        GsyCertificadosDto cus = new GsyCertificadosDto();
        cus.setCerId(id);
        cus.setDes(jtDescripcion.getText());
        cus.setActivo(jcActivo.isSelected());
        cus.setFeCertificado(jtCer.getText());
        cus.setFePrivatekey(jtPK.getText());
        cus.setTipo(((TIPO_CERTIFICADO) jComboBox1.getSelectedItem()).name());
        return cus;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtId = new javax.swing.JTextField();
        jcActivo = new javax.swing.JCheckBox();
        jtFecha = new javax.swing.JTextField();
        jtDescripcion = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtPK = new javax.swing.JTextField();
        jbPKCargar = new javax.swing.JButton();
        jbPkBorrar = new javax.swing.JButton();
        jbPKver = new javax.swing.JButton();
        jtCer = new javax.swing.JTextField();
        jbCerCargar = new javax.swing.JButton();
        jbCerBorrar = new javax.swing.JButton();
        jbCerVer = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jb_aceptar = new javax.swing.JButton();
        jb_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jtId.setText("jTextField1");

        jcActivo.setText("Activo");
        jcActivo.setMaximumSize(new java.awt.Dimension(55, 20));
        jcActivo.setMinimumSize(new java.awt.Dimension(55, 20));
        jcActivo.setPreferredSize(new java.awt.Dimension(55, 20));

        jtFecha.setEditable(false);
        jtFecha.setText("jTextField1");

        jtDescripcion.setText("jTextField1");
        jtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDescripcionActionPerformed(evt);
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("Descripcion:");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Private Key:");

        jbPKCargar.setText("Cargar");
        jbPKCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPKCargarActionPerformed(evt);
            }
        });

        jbPkBorrar.setText("Borrar");
        jbPkBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPkBorrarActionPerformed(evt);
            }
        });

        jbPKver.setText("Ver");
        jbPKver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPKverActionPerformed(evt);
            }
        });

        jbCerCargar.setText("Cargar");
        jbCerCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCerCargarActionPerformed(evt);
            }
        });

        jbCerBorrar.setText("Borrar");
        jbCerBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCerBorrarActionPerformed(evt);
            }
        });

        jbCerVer.setText("Ver");
        jbCerVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCerVerActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Certificado:");

        jLabel3.setText("Fecha:");

        jLabel4.setText("Tipo Certificado:");

        jb_aceptar.setText("Aceptar");
        jb_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_aceptarActionPerformed(evt);
            }
        });

        jb_cancelar.setText("Cancelar");
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jb_aceptar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jb_cancelar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtPK, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbPKCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbPkBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbPKver, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtCer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCerCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCerBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCerVer, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jcActivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPkBorrar)
                    .addComponent(jtPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPKver)
                    .addComponent(jbPKCargar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCerCargar)
                    .addComponent(jbCerBorrar)
                    .addComponent(jbCerVer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_aceptar)
                    .addComponent(jb_cancelar))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_aceptarActionPerformed
        try {
            GsyCertificadosDto cus = getFromScreen();
            chequear(cus);
            reccordGsyProv = cus;
            setConfirmed(true);
            setVisible(false);
        } catch (Exception ex) {
            LOG.log(Level.SEVERE, null, ex);
            me(ex);
        }
    }//GEN-LAST:event_jb_aceptarActionPerformed

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jb_cancelarActionPerformed

    private void jbPKCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPKCargarActionPerformed
        cargarPrimaryKey();
    }//GEN-LAST:event_jbPKCargarActionPerformed

    private void jbPkBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPkBorrarActionPerformed
        jtPK.setText("");
    }//GEN-LAST:event_jbPkBorrarActionPerformed

    private void jbPKverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPKverActionPerformed
        JOptionPane.showMessageDialog(this, reccordGsyProv.getFePrivatekey(), "Private Key", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jbPKverActionPerformed

    private void jbCerVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCerVerActionPerformed
        JOptionPane.showMessageDialog(this, reccordGsyProv.getFeCertificado(), "Certificado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jbCerVerActionPerformed

    private void jbCerBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCerBorrarActionPerformed
        jtCer.setText("");
    }//GEN-LAST:event_jbCerBorrarActionPerformed

    private void jbCerCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCerCargarActionPerformed
        cargarPrimaryCer();
    }//GEN-LAST:event_jbCerCargarActionPerformed

    private void jtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtDescripcionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<TIPO_CERTIFICADO> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbCerBorrar;
    private javax.swing.JButton jbCerCargar;
    private javax.swing.JButton jbCerVer;
    private javax.swing.JButton jbPKCargar;
    private javax.swing.JButton jbPKver;
    private javax.swing.JButton jbPkBorrar;
    private javax.swing.JButton jb_aceptar;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JCheckBox jcActivo;
    private javax.swing.JTextField jtCer;
    private javax.swing.JTextField jtDescripcion;
    private javax.swing.JTextField jtFecha;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtPK;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the confirmed
     */
    public boolean isConfirmed() {
        return confirmed;
    }

    /**
     * @param confirmed the confirmed to set
     */
    public void setConfirmed(boolean confirmed) {
        this.confirmed = confirmed;
    }

    public void setRecord(GsyCertificadosDto customer, CRUD crud) {
        this.reccordGsyProv = customer;
        this.crud = crud;

        jtId.setText(customer.getCerId().toString());
        jtDescripcion.setText(customer.getDes());
        jComboBox1.setSelectedItem(TIPO_CERTIFICADO.valueOf(customer.getTipo()));
        jtCer.setText(customer.getFeCertificado());
        jtPK.setText(customer.getFePrivatekey());
        jtFecha.setText(DateUtils.toDateTimeView(customer.getFec()));
        jcActivo.setSelected(customer.getActivo());

        jtId.setEnabled(false);
        switch (crud) {
            case ALTA:
                jtId.setText("0");
        }
    }

    @Override
    public void preInit() {
        initComponents();
        jb_aceptar.setIcon(SgImage.ACEPTAR.getImage(SgImage.SIZES.S16));
        jb_cancelar.setIcon(SgImage.CANCELAR.getImage(SgImage.SIZES.S16));
        for (TIPO_CERTIFICADO t : TIPO_CERTIFICADO.values()) {
            jComboBox1.addItem(t);
        }
        jComboBox1.setSelectedIndex(0);
      
    }

    private void cargarPrimaryKey() {
        JFileChooser fileChooser = new JFileChooser();
        // que acceda al ultimo directorio habierto
        String ultimoPath = getUltimoPath();
        fileChooser.setCurrentDirectory(new File(ultimoPath + "/."));
        int seleccion = fileChooser.showOpenDialog(this);
        /*si apriete abrir entra al if*/
        if (seleccion != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File file = fileChooser.getSelectedFile();
        int opt = JOptionPane.showConfirmDialog(this, "Quiere abrir este archivo ? : "
                + file.getName(), "Importacion de Llave Privada", JOptionPane.YES_NO_OPTION);
        if (opt != JOptionPane.YES_OPTION) {
            return;
        }
        setUltimoPath(file.getPath());
        String str = "";
        try {
            str = FileUtils.getStringFormFile(file);
        } catch (IOException ex) {
            LOG.log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error:\n\r" + ex.getMessage());
        }
        jtPK.setText(str);
    }

    private void cargarPrimaryCer() {
        JFileChooser fileChooser = new JFileChooser();
        // que acceda al ultimo directorio habierto
        String ultimoPath = getUltimoPath();
        fileChooser.setCurrentDirectory(new File(ultimoPath + "/."));
        int seleccion = fileChooser.showOpenDialog(this);
        /*si apriete abrir entra al if*/
        if (seleccion != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File file = fileChooser.getSelectedFile();
        int opt = JOptionPane.showConfirmDialog(this, "Quiere abrir este archivo ? : "
                + file.getName(), "Importacion de Certificado", JOptionPane.YES_NO_OPTION);
        if (opt != JOptionPane.YES_OPTION) {
            return;
        }
        setUltimoPath(file.getPath());
        String str = "";
        try {
            str = FileUtils.getStringFormFile(file);
        } catch (IOException ex) {
            LOG.log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error:\n\r" + ex.getMessage());
        }
        jtCer.setText(str);
    }

    public static String getUltimoPath() {
        if (ultimoPath == null) {
            ultimoPath = System.getProperty("user.dir");
        }
        return ultimoPath;
    }

    /**
     * @param aUltimoPath the ultimoPath to set
     */
    public static void setUltimoPath(String aUltimoPath) {
        ultimoPath = aUltimoPath;
    }

}
